@inproceedings{Balasubramanian2017,
  author    = {Balasubramanian, Abhiram and Baranowski, Marek S. and Burtsev, Anton and Panda, Aurojit and Rakamari, Zvonimir and Ryzhyk, Leonid},
  title     = {System Programming in Rust: Beyond Safety},
  publisher = {Association for Computing Machinery},
  pages     = {156–161},
  address   = {New York, NY, USA},
  booktitle = {Proceedings of the 16th Workshop on Hot Topics in Operating Systems},
  year      = {2017}
}

@inproceedings{Levy2017,
  author    = {Levy, Amit and Campbell, Bradford and Ghena, Branden and Giffin, Daniel B. and Pannuto, Pat and Dutta, Prabal and Levis, Philip},
  booktitle = {Proceedings of the 26th Symposium on Operating Systems Principles},
  title     = {Multiprogramming a 64kB Computer Safely and Efficiently},
  pages     = {234-251},
  year      = {2017},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA}
}

@inproceedings{Evans2020,
  author    = {Evans, Ana Nora and Campbell, Bradford and Soffa, Mary Lou},
  booktitle = {2020 IEEE/ACM 42nd International Conference on Software Engineering (ICSE)},
  title     = {Is Rust Used Safely by Software Developers?},
  pages     = {246-257},
  comment   = {Die Autoren untersuchen Open-Source Projekte, die in Rust geschrieben wurden und analysieren inwieweit die Entwickler der Projekte die unsicheren Features von Rust verwenden und die Sicherheiten des Compilers umgeben (unsafe code).
               Das Paper zitiert auch mehrere andere Artikel, die auf die Sicherheiten von Rust eingehen und die Sprache mit C und C++ vergleichen.},
  year      = {2020},
  publisher = {IEEE Computer Society}
}

@inproceedings{Anderson2016,
  author    = {Anderson, Brian and Bergstrom, Lars and Goregaokar, Manish and Matthews, Josh and McAllister, Keegan and Moffitt, Jack and Sapin, Simon},
  booktitle = {Proceedings of the 38th International Conference on Software Engineering Companion},
  title     = {Engineering the Servo Web Browser Engine Using Rust},
  pages     = {81-89},
  year      = {2016},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA}
}

@inproceedings{Boos2017,
  author    = {Boos, Kevin and Zhong, Lin},
  booktitle = {Proceedings of the 9th Workshop on Programming Languages and Operating Systems},
  title     = {Theseus: A State Spill-Free Operating System},
  pages     = {29-35},
  year      = {2017},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA}
}

@article{Lin2016,
  author  = {Lin, Yi and Blackburn, Stephen M. and Hosking, Antony L. and Norrish, Michael},
  title   = {Rust as a Language for High Performance GC Implementation},
  pages   = {89-98},
  comment = {Der Artikel beschreibt die Vorteile und Nachteile von Rust gegenüber C.},
  journal = {SIGPLAN Not.},
  year    = {2016},
  number  = {11},
  volume  = {51}
}

@inproceedings{Gens2018,
  author    = {Gens, David and Schmitt, Simon and Davi, Lucas and Sadeghi, Ahmad-Reza},
  title     = {K-Miner: Uncovering Memory Corruption in Linux},
  booktitle = {NDSS},
  year      = {2018}
}

@inproceedings{Szekeres2013,
  author    = {Szekeres, László and Payer, Mathias and Wei, Tao and Song, Dawn},
  booktitle = {2013 IEEE Symposium on Security and Privacy},
  title     = {SoK: Eternal War in Memory},
  pages     = {48-26},
  year      = {2013},
  publisher = {IEEE Computer Society}
}

@inproceedings{Qin2020,
  author    = {Qin, Boqin and Chen, Yilun and Yu, Zeming and Song, Linhai and Zhang, Yiying},
  booktitle = {Proceedings of the 41st ACM SIGPLAN Conference on Programming Language Design and Implementation},
  title     = {Understanding Memory and Thread Safety Practices and Issues in Real-World Rust Programs},
  pages     = {763–779},
  year      = {2020},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA}
}

@inproceedings{Jiang2021,
  author    = {Jiang, Jianfeng and Xu, Hui and Zhou, Yangfan},
  title     = {RULF: Rust Library Fuzzing via API Dependency Graph Traversal},
  ranking   = {rank2},
  year      = {2021},
  booktitle = {2021 36th IEEE/ACM International Conference on Automated Software Engineering (ASE)},
  pages     = {581-592},
  publisher = {IEEE Computer Society}
}

@inproceedings{8471992,
  author    = {Lindner, Marcus and Aparicius, Jorge and Lindgren, Per},
  booktitle = {2018 IEEE 16th International Conference on Industrial Informatics (INDIN)},
  title     = {No Panic! Verification of Rust Programs by Symbolic Execution},
  pages     = {108-114},
  comment   = {TODO symbolic execution for RUST},
  file      = {:papers/No_Panic_Verification_of_Rust_Programs_by_Symbolic_Execution.pdf:PDF},
  year      = {2018},
  publisher = {IEEE Computer Society}
}

@inproceedings{10.1145/2818302.2818306,
  author    = {Levy, Amit and Andersen, Michael P. and Campbell, Bradford and Culler, David and Dutta, Prabal and Ghena, Branden and Levis, Philip and Pannuto, Pat},
  title     = {Ownership is Theft: Experiences Building an Embedded OS in Rust},
  booktitle = {Proceedings of the 8th Workshop on Programming Languages and Operating Systems},
  year      = {2015},
  publisher = {Association for Computing Machinery},
  pages     = {21–26},
  address   = {New York, NY, USA}
}

@inproceedings{732680,
  author    = {Tracey, N. and Clark, J. and Mander, K. and McDermid, J.},
  booktitle = {Proceedings 13th IEEE International Conference on Automated Software Engineering (Cat. No.98EX239)},
  title     = {An automated framework for structural test-data generation},
  pages     = {285-288},
  comment   = {Das Paper erklärt verschiedene Branch Distance Funktionen für SBST.},
  file      = {:papers/An_automated_framework_for_structural_test-data_generation.pdf:PDF},
  year      = {1998},
  publisher = {IEEE Computer Society}
}

@inproceedings{6100119,
  author    = {Baars, Arthur and Harman, Mark and Hassoun, Youssef and Lakhotia, Kiran and McMinn, Phil and Tonella, Paolo and Vos, Tanja},
  booktitle = {2011 26th IEEE/ACM International Conference on Automated Software Engineering (ASE 2011)},
  title     = {Symbolic search-based testing},
  pages     = {53-62},
  comment   = {TODO Das Paper erklärt, wie die Branch Distance Funktion effizienter gestaltet werden kann, um komplizierte verschachtelte If-Konditionen zu erfüllen mit Hilfe von Dynamic Symbolic Execution.
               symbolic execution},
  file      = {:papers/Symbolic_search-based_testing.pdf:PDF},
  year      = {2011},
  publisher = {IEEE Computer Society}
}

@article{Khari2019,
  author  = {Khari, Manju and Kumar, Prabhat},
  title   = {An extensive evaluation of search-based software testing: a review},
  number  = {6},
  pages   = {1933-1946},
  volume  = {23},
  comment = {Eine systematische Übersicht über das SBST, die Hierarchie der Algorithmen usw.},
  file    = {:papers/Khari-Kumar2019_Article_AnExtensiveEvaluationOfSearch-.pdf:PDF},
  journal = {Soft Computing},
  year    = {2019}
}

@inproceedings{Sen2006,
  author    = {Sen, Koushik and Agha, Gul},
  booktitle = {Computer Aided Verification},
  title     = {CUTE and jCUTE: Concolic Unit Testing and Explicit Path Model-Checking Tools},
  pages     = {419--423},
  publisher = {Springer Berlin Heidelberg},
  address   = {Berlin, Heidelberg},
  comment   = {jCUTE SBST Tool für Java und C, welches automatisch jUnit tests generieren und außerdem Probleme bei concurrent Programmen erkennen kann.},
  file      = {:papers/2006_Book_ComputerAidedVerification.pdf:PDF},
  year      = {2006}
}

@inproceedings{10.1145/800175.809889,
  author    = {Davis, Martin D. and Weyuker, Elaine J.},
  booktitle = {Proceedings of the ACM '81 Conference},
  title     = {Pseudo-Oracles for Non-Testable Programs},
  pages     = {254–257},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  comment   = {Das Paper beschreibt die Pseudo-Orakel für non-testable Programme. Diese werden dadurch realisiert, dass ein SUT von zwei Teams unabhängig implementiert wird (mittels zwei verschiedenen Sprachen) und die Ausgaben dieser beiden Programmen, die nach Spezifikation äquivalent sein sollten, werden verglichen.},
  file      = {:papers/800175.809889.pdf:PDF},
  year      = {1981}
}

@inproceedings{McMinn2009,
  author    = {McMinn, Phil},
  booktitle = {Proceedings of the 11th Annual Conference on Genetic and Evolutionary Computation},
  title     = {Search-Based Failure Discovery Using Testability Transformations to Generate Pseudo-Oracles},
  pages     = {1689–1696},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  comment   = {Das Paper baut auf dem Originalpaper von Davis und Weyuker über Pseudo-Orakel und versucht, solche Pseudo-Orakel automatisch zu generieren, um ein zweites Program zu erstellen, welches die gleichen Outputs haben sollte.},
  file      = {:papers/1569901.1570127.pdf:PDF},
  year      = {2009}
}

@inproceedings{528535,
  author    = {Offutt, A.J.},
  booktitle = {Proceedings., International Test Conference},
  title     = {A practical system for mutation testing: help for the common programmer},
  pages     = {824-830},
  comment   = {Grundlagen von Mutation Testing in Unit-Tests.},
  file      = {:papers/A_practical_system_for_mutation_testing_help_for_the_common_programmer.pdf:PDF},
  year      = {1994},
  publisher = {IEEE Computer Society}
}

@article{Harman2004,
  author  = {Harman, M. and Hu, L. and Hierons, R. and Wegener, J. and Sthamer, H. and Baresel, A. and Roper, M.},
  title   = {Testability transformation},
  number  = {1},
  pages   = {3-16},
  volume  = {30},
  comment = {Quellcode-zu-Quellcode Transformationen, um bessere Performanz für Testgenerierung zu kriegen. Dabei wird ein SUT unter bestimmten Transformationen zu einem ähnlichen Programm umgewandelt.},
  file    = {:papers/01265732.pdf:PDF},
  journal = {IEEE Transactions on Software Engineering},
  year    = {2004}
}

@inproceedings{10.1145/1450058.1450087,
  author    = {Godefroid, Patrice and Levin, Michael Y. and Molnar, David A.},
  booktitle = {Proceedings of the 8th ACM International Conference on Embedded Software},
  title     = {Active Property Checking},
  pages     = {207–216},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  comment   = {Testability Transformation, um für bestimmte Fehler wie DivisionByZero oder IndexOutOfBounds einen eigenen Branch zu erstellen, wodurch die Suche in bestimmte Richtung gelenkt werden kann.},
  file      = {:papers/1450058.1450087.pdf:PDF},
  year      = {2008}
}

@article{GUO2016204,
  author  = {Hai-Feng Guo},
  title   = {A semantic approach for automated test oracle generation},
  pages   = {204-219},
  volume  = {45},
  comment = {TODO Explizite Tags als Orakel für Testgenerierung
             test oracle},
  journal = {Computer Languages, Systems \& Structures},
  year    = {2016}
}

@article{10.1145/3293455,
  author    = {Arcuri, Andrea},
  title     = {RESTful API Automated Test Case Generation with EvoMaster},
  volume    = {28},
  address   = {New York, NY, USA},
  number    = {3},
  comment   = {SBST für REST APIs mit Orakel Generierung.},
  file      = {:papers/3293455.pdf:PDF},
  journal   = {ACM Trans. Softw. Eng. Methodol.},
  publisher = {Association for Computing Machinery},
  year      = {2019}
}

@article{6963470,
  author  = {Barr, Earl T. and Harman, Mark and McMinn, Phil and Shahbaz, Muzammil and Yoo, Shin},
  title   = {The Oracle Problem in Software Testing: A Survey},
  number  = {5},
  pages   = {507-525},
  volume  = {41},
  comment = {Beschreibt Arten von Orakel (automatische und manuelle) und wie sie zusammenhängen.},
  file    = {:6963470 - The Oracle Problem in Software Testing_ a Survey.pdf:PDF},
  journal = {IEEE Transactions on Software Engineering},
  year    = {2015}
}

@inproceedings{McMinn2011,
  author    = {McMinn, Phil},
  booktitle = {2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops},
  title     = {Search-Based Software Testing: Past, Present and Future},
  pages     = {153-163},
  comment   = {Eine gute Übersicht was SBST überhaupt ist und welche Arten von SBST momentan verbreitet sind: temporal testing, structural testing, functional testing, mit realen Anwendungsbeispielen.},
  file      = {:papers/Search-Based_Software_Testing_Past_Present_and_Future.pdf:PDF},
  publisher = {IEEE Computer Society},
  year      = {2011}
}

@inproceedings{10.1145/1062455.1062530,
  author    = {Andrews, J. H. and Briand, L. C. and Labiche, Y.},
  booktitle = {Proceedings of the 27th International Conference on Software Engineering},
  title     = {Is Mutation an Appropriate Tool for Testing Experiments?},
  pages     = {402–411},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  comment   = {Eine empirische Forschung, die zeigt, dass Test Suites, die gut im Finden von Mutanten sind, sind auch gut im Finden von echten Bugs.},
  file      = {:papers/1062455.1062530.pdf:PDF},
  year      = {2005}
}

@inproceedings{Fraser2011,
  author    = {Fraser, Gordon and Arcuri, Andrea},
  booktitle = {2011 Fourth IEEE International Conference on Software Testing, Verification and Validation},
  title     = {It is Not the Length That Matters, It is How You Control It},
  pages     = {150-159},
  publisher = {IEEE Computer Society},
  comment   = {Es werden Techniken vorgestellt, um generierte Tests so klein wie möglich zu halten und Bloating zu vermeiden. Außerdem wird die Berechnung und Normalisierung der Branch und Approach Distance erklärt. Zudem werden die Crossover, Selection und Mutation Operatoren anhand von Beispielen erklärt.
               Insgesamt wird im Paper jeder Schritt der Generierung und Evolution relativ genau erklärt.},
  file      = {:papers/05770604.pdf:PDF},
  year      = {2011}
}

@inproceedings{5477052,
  author    = {Arcuri, Andrea},
  booktitle = {2010 Third International Conference on Software Testing, Verification and Validation},
  title     = {Longer is Better: On the Role of Test Sequence Length in Software Testing},
  pages     = {469-478},
  comment   = {TODO Arcuri untersucht, dass die Länge der Tests direkt mit der Coverage der Tests korreliert.},
  file      = {:papers/Longer_is_Better_On_the_Role_of_Test_Sequence_Length_in_Software_Testing.pdf:PDF},
  publisher = {IEEE Computer Society},
  year      = {2010}
}

@article{whitley1994genetic,
  author    = {Whitley, Darrell},
  title     = {A genetic algorithm tutorial},
  number    = {2},
  pages     = {65--85},
  volume    = {4},
  comment   = {Einführung in genetische Algorithmen},
  journal   = {Statistics and computing},
  publisher = {Springer},
  year      = {1994}
}

@article{WHITLEY2001817,
  author  = {Darrell Whitley},
  title   = {An overview of evolutionary algorithms: practical issues and common pitfalls},
  number  = {14},
  pages   = {817-831},
  volume  = {43},
  comment = {TODO Eine weiterführende Einführung in die genetischen Algorithmen},
  file    = {:papers/WHITLEY2001817.pdf:PDF},
  journal = {Information and Software Technology},
  year    = {2001}
}

@article{BUHLER20083144,
  author  = {Oliver Bühler and Joachim Wegener},
  title   = {Evolutionary functional testing},
  number  = {10},
  pages   = {3144-3160},
  volume  = {35},
  comment = {DaimlerChrysler SBST für funktionales Testen der automatischen Einparkhilfe},
  journal = {Computers \& Operations Research},
  year    = {2008}
}

@inproceedings{Shamshiri2015,
  author    = {Shamshiri, Sina and Just, Rene and Rojas, Jos\'{e} Miguel and Fraser, Gordon and McMinn, Phil and Arcuri, Andrea},
  booktitle = {International Conference on Automated Software Engineering (ASE 2015)},
  title     = {Do Automatically Generated Unit Tests Find Real Faults? An Empirical Study of Effectiveness and Challenges},
  pages     = {201--211},
  publisher = {Association for Computing Machinery},
  comment   = {Noch zu lesen},
  file      = {:papers/Do_Automatically_Generated_Unit_Tests_Find_Real_Faults_An_Empirical_Study_of_Effectiveness_and_Challenges_T.pdf:PDF},
  year      = {2015}
}

@article{Fraser2015,
  author  = {Fraser, Gordon and Arcuri, Andrea and McMinn, Phil},
  title   = {A Memetic Algorithm for Whole Test Suite Generation},
  pages   = {311--327},
  volume  = {103},
  comment = {Feingranulare Erweiterung der genetischen Algorithme, noch zu lesen},
  file    = {:papers/A-Memetic-Algorithm-for-whole-test-suite-gen_2015_Journal-of-Systems-and-Sof.pdf:PDF},
  journal = {Journal of Systems and Software},
  year    = {2015}
}

@inproceedings{6200103,
  author    = {Fraser, Gordon and Arcuri, Andrea},
  booktitle = {2012 IEEE Fifth International Conference on Software Testing, Verification and Validation},
  title     = {The Seed is Strong: Seeding Strategies in Search-Based Software Testing},
  pages     = {121-130},
  comment   = {Das Paper erklärt, wie SBST mit bestimmten Seedingstechniken anstatt von Random Initial Population bessere erzielen könnte.},
  file      = {:papers/The_Seed_is_Strong_Seeding_Strategies_in_Search-Based_Software_Testing.pdf:PDF},
  year      = {2012},
  publisher = {IEEE Computer Society},
  address   = {Los Alamitos, CA, USA}
}

@inproceedings{10.1145/1143997.1144316,
  author    = {Tlili, Marouane and Wappler, Stefan and Sthamer, Harmen},
  booktitle = {Proceedings of the 8th Annual Conference on Genetic and Evolutionary Computation},
  title     = {Improving Evolutionary Real-Time Testing},
  pages     = {1917–1924},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  comment   = {DaimlerChrysler versucht in dem Paper, die kritischen Echtzeitsysteme mit Hilfe von SBST zu testen, indem die möglichst schlechte Ausführungszeit gesucht wird.},
  file      = {:papers/1143997.1144316.pdf:PDF},
  year      = {2006}
}

@misc{StackOverflow2020,
  author  = {{Stack Overflow}},
  title   = {{Stack Overflow Developer Survey 2020}},
  url     = {https://insights.stackoverflow.com/survey/2020#technology-most-loved-dreaded-and-wanted-languages-loved},
  urldate = {2021-05-02}
}

@misc{Rust10,
  author  = {{The Rust Core Team}},
  title   = {Announcing Rust 1.0},
  url     = {https://blog.rust-lang.org/2015/05/15/Rust-1.0.html},
  urldate = {2021-06-28}
}

@inproceedings{cadar2008klee,
  author    = {Cadar, Cristian and Dunbar, Daniel and Engler, Dawson},
  booktitle = {OSDI},
  title     = {KLEE: unassisted and automatic generation of high-coverage tests for complex systems programs.},
  pages     = {209--224},
  volume    = {8},
  file      = {:papers/cadar.pdf:PDF},
  year      = {2008}
}

@misc{Microsoft2019MemoryBugs,
  author  = {Matt Miller},
  title   = {Trends, challenges, and strategic shifts in the software vulnerability mitigation landscape},
  url     = {https://github.com/Microsoft/MSRC-Security-Research/blob/master/presentations/2019_02_BlueHatIL/2019_01%20-%20BlueHatIL%20-%20Trends%2C%20challenge%2C%20and%20shifts%20in%20software%20vulnerability%20mitigation.pdf},
  urldate = {2021-06-28},
  comment = {Microfosft's Präsentation über die Anzahl von Speicher-spezifischen Bugs in ihrer Software.}
}

@misc{MicrosoftJoinsRust,
  author  = {Nell Shamrell-Harrington},
  title   = {Microsoft joins Rust Foundation},
  url     = {https://cloudblogs.microsoft.com/opensource/2021/02/08/microsoft-joins-rust-foundation/},
  urldate = {2021-06-28},
  comment = {Microsoft Blog erzählt, dass Microsoft in OSS Rust Foundation eingestiegen ist.}
}

@misc{FutureOfRust,
  author  = {Cameron Manavian},
  title   = {Post-Mozilla Rust: The Future of the Rust Language},
  urldate = {2021-10-19},
  url     = {https://medium.com/the-innovation/post-mozilla-rust-the-future-of-the-rust-language-61a5cfb1f615},
  comment = {The companies that love Rust.}
}

@misc{AmazonLovesRust,
  author  = {Matt Asay},
  title   = {Why AWS loves Rust, and how we'd like to help},
  url     = {https://aws.amazon.com/de/blogs/opensource/why-aws-loves-rust-and-how-wed-like-to-help/},
  urldate = {2021-06-28}
}

@misc{RustInAndroid,
  author  = {Stoep, Jeff Vander and Hines, Stephen},
  title   = {Rust in the Android platform},
  urldate = {2021-10-06},
  url     = {https://security.googleblog.com/2021/04/rust-in-android-platform.html}
}

@misc{GoogleRustFoundation,
  author  = {Lars Bergstrom},
  title   = {Google joins the Rust Foundation},
  urldate = {2021-11-08},
  url     = {https://opensource.googleblog.com/2021/02/google-joins-rust-foundation.html},
  comment = {Google über ihre Systeme, die mit Rust geschrieben wurden.}
}

@inproceedings{Disselkoen,
  author       = {Disselkoen, Craig and Ayers, Hudson},
  title        = {haybale: Symbolic execution of LLVM IR},
  groups       = {State of the Art Tools},
  year         = {2020},
  organization = {TECHCON}
}

@article{Panichella_2015,
  author    = {Annibale Panichella and Fitsum Meshesha Kifetew and Paolo Tonella},
  title     = {Reformulating Branch Coverage as a Many-Objective Optimization Problem},
  booktitle = {2015 {IEEE} 8th International Conference on Software Testing, Verification and Validation ({ICST})},
  comment   = {Der MOSA Algorithmus.},
  file      = {:papers/07102604.pdf:PDF},
  publisher = {IEEE Computer Society},
  year      = {2015}
}

@article{Fraser_2013,
  author    = {Gordon Fraser and Andrea Arcuri},
  title     = {Whole Test Suite Generation},
  number    = {2},
  pages     = {276--291},
  volume    = {39},
  file      = {:papers/06152257.pdf:PDF;:Fraser_2013 - Whole Test Suite Generation.pdf:PDF},
  journal   = {{IEEE} Transactions on Software Engineering},
  publisher = {IEEE Computer Society},
  year      = {2013}
}

@article{10.1145/103162.103163,
  author    = {Goldberg, David},
  title     = {What Every Computer Scientist Should Know about Floating-Point Arithmetic},
  number    = {1},
  pages     = {5–48},
  volume    = {23},
  address   = {New York, NY, USA},
  file      = {:papers/103162.103163.pdf:PDF},
  journal   = {ACM Comput. Surv.},
  publisher = {Association for Computing Machinery},
  year      = {1991}
}

@book{Holland1992,
  author    = {Holland, John H.},
  title     = {Adaptation in Natural and Artificial Systems: An Introductory Analysis with Applications to Biology, Control and Artificial Intelligence},
  year      = {1992},
  publisher = {MIT Press},
  address   = {Cambridge, MA, USA}
}

@article{Fraser2013,
  author    = {Gordon Fraser and Andrea Arcuri},
  title     = {1600 faults in 100 projects: automatically finding faults while achieving high coverage with {EvoSuite}},
  number    = {3},
  pages     = {611-639},
  volume    = {20},
  file      = {:papers/Fraser-Arcuri2015_Article_1600FaultsIn100ProjectsAutomat.pdf:PDF},
  journal   = {Empirical Software Engineering},
  publisher = {Springer Science and Business Media {LLC}},
  year      = {2013}
}

@inproceedings{Fraser_2011,
  author    = {Gordon Fraser and Andrea Arcuri},
  title     = {{EvoSuite}},
  booktitle = {Proceedings of the 19th {ACM} {SIGSOFT} symposium and the 13th European conference on Foundations of software engineering - {SIGSOFT}/{FSE} {\textquotesingle}11},
  file      = {:papers/2025113.2025179.pdf:PDF},
  publisher = {{ACM} Press},
  year      = {2011},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  pages     = {416–419}
}

@inproceedings{Fraser_2011a,
  author    = {Gordon Fraser and Andrea Arcuri},
  title     = {Evolutionary Generation of Whole Test Suites},
  booktitle = {2011 11th International Conference on Quality Software},
  pages     = {31-40},
  file      = {:papers/06004309.pdf:PDF},
  publisher = {IEEE Computer Society},
  year      = {2011},
  address   = {Los Alamitos, CA, USA}
}

@inproceedings{Goldberg_1994,
  author    = {Allen Goldberg and T. C. Wang and David Zimmerman},
  title     = {Applications of feasible path analysis to program testing},
  booktitle = {Proceedings of the 1994 ACM SIGSOFT International Symposium on Software Testing and Analysis},
  file      = {:papers/186258.186523.pdf:PDF},
  publisher = {Association for Computing Machinery},
  year      = {1994},
  pages     = {80–94},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA}
}

@inproceedings{Pacheco_2007,
  author    = {Carlos Pacheco and Michael D. Ernst},
  title     = {Randoop: feedback-directed random testing for Java},
  booktitle = {Companion to the 22nd ACM SIGPLAN Conference on Object-Oriented Programming Systems and Applications Companion},
  comment   = {TODO branch distance},
  file      = {:papers/1297846.1297902.pdf:PDF},
  publisher = {Association for Computing Machinery},
  year      = {2007},
  pages     = {815–816},
  address   = {New York, NY, USA}
}

@inproceedings{Godefroid_2005,
  author    = {Godefroid, Patrice and Klarlund, Nils and Sen, Koushik},
  title     = {DART: Directed Automated Random Testing},
  booktitle = {Proceedings of the 2005 ACM SIGPLAN Conference on Programming Language Design and Implementation},
  file      = {:papers/1064978.1065036.pdf:PDF},
  publisher = {Association for Computing Machinery},
  year      = {2005},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  pages     = {213–223}
}

@article{McMinn_2004,
  author    = {Phil McMinn},
  title     = {Search-based software test data generation: a survey},
  number    = {2},
  pages     = {105-156},
  volume    = {14},
  comment   = {Es wird auch die rekursive Berechnung der Branch Distance erklärt.},
  file      = {:papers/stvr.294.pdf:PDF},
  journal   = {Software Testing, Verification and Reliability},
  month     = {5},
  publisher = {Wiley},
  year      = {2004}
}

@article{Arcuri_2011,
  author    = {Andrea Arcuri},
  title     = {It really does matter how you normalize the branch distance in search-based software testing},
  number    = {2},
  pages     = {119-147},
  volume    = {23},
  comment   = {TODO branch distance},
  file      = {:papers/stvr.457.pdf:PDF},
  journal   = {Software Testing, Verification and Reliability},
  publisher = {Wiley},
  year      = {2013}
}

@inproceedings{Harman2002,
  author    = {Harman, M. and Fox, C. and Hierons, R. and Lin Hu and Danicic, S. and Wegener, J.},
  booktitle = {Proceedings. Second IEEE International Workshop on Source Code Analysis and Manipulation},
  title     = {VADA: a transformation-based system for variable dependence analysis},
  pages     = {55-64},
  file      = {:papers/VADA_a_transformation-based_system_for_variable_dependence_analysis.pdf:PDF},
  year      = {2002},
  publisher = {IEEE Computer Society}
}

@article{Arcuri_2013,
  author    = {Andrea Arcuri and Gordon Fraser},
  title     = {Parameter tuning or default values? An empirical investigation in search-based software engineering},
  number    = {3},
  pages     = {594-623},
  volume    = {18},
  comment   = {TODO seeding parameters tuning},
  file      = {:papers/Arcuri-Fraser2013_Article_ParameterTuningOrDefaultValues.pdf:PDF},
  journal   = {Empirical Software Engineering},
  publisher = {Springer Science and Business Media {LLC}},
  year      = {2013}
}

@article{Arcuri_2014,
  author    = {Andrea Arcuri and Gordon Fraser},
  title     = {On the Effectiveness of Whole Test Suite Generation},
  pages     = {1-15},
  booktitle = {Search-Based Software Engineering},
  comment   = {TODO Whose Suite},
  file      = {:papers/2014_Book_Search-BasedSoftwareEngineerin.pdf:PDF},
  publisher = {Springer International Publishing},
  year      = {2014},
  address   = {Cham}
}

@article{Deb_2000,
  author    = {Kalyanmoy Deb and Samir Agrawal and Amrit Pratap and T Meyarivan},
  title     = {A Fast Elitist Non-dominated Sorting Genetic Algorithm for Multi-objective Optimization: {NSGA}-{II}},
  pages     = {849-858},
  booktitle = {Parallel Problem Solving from Nature {PPSN} {VI}},
  comment   = {Der NSGA II Algorithmus.},
  file      = {:papers/nsga2.pdf:PDF},
  publisher = {Springer Berlin Heidelberg},
  address   = {Berlin, Heidelberg},
  year      = {2000}
}

@inproceedings{Babi__2011,
  author    = {Babi\'{c}, Domagoj and Martignoni, Lorenzo and McCamant, Stephen and Song, Dawn},
  title     = {Statically-directed dynamic automated test generation},
  booktitle = {Proceedings of the 2011 International Symposium on Software Testing and Analysis},
  comment   = {Der Autor beschreibt vor allem Probleme einer Testgenerierung, die auf Binaries und nicht auf Souce Code Level statt findet. Das könnte man als einen Gegenpunkt bei KLEE und anderen Testgeneratoren für Rust verwenden.},
  file      = {:papers/2001420.2001423.pdf:PDF},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  year      = {2011},
  pages     = {12–22}
}

@article{Myers2012,
  title     = {The art of software testing},
  author    = {Myers, Glenford J and Sandler, Corey and Badgett, Tom},
  year      = {2011},
  publisher = {John Wiley \& Sons},
  file      = {:papers/9781119202486.pdf:PDF}
}

@inproceedings{Harman2015,
  author    = {Harman, Mark and Jia, Yue and Zhang, Yuanyuan},
  booktitle = {2015 IEEE 8th International Conference on Software Testing, Verification and Validation (ICST)},
  title     = {Achievements, Open Problems and Challenges for Search Based Software Testing},
  pages     = {1-12},
  comment   = {TODO},
  file      = {:papers/Achievements_Open_Problems_and_Challenges_for_Search_Based_Software_Testing.pdf:PDF},
  year      = {2015},
  publisher = {IEEE Computer Society}
}

@inproceedings{Campos2017,
  author    = {Campos, Jos{\'e} and Ge, Yan and Fraser, Gordon and Eler, Marcelo and Arcuri, Andrea},
  booktitle = {Search Based Software Engineering},
  title     = {An Empirical Evaluation of Evolutionary Algorithms for Test Suite Generation},
  pages     = {33-48},
  publisher = {Springer International Publishing},
  abstract  = {Evolutionary algorithms have been shown to be effective at generating unit test suites optimised for code coverage. While many aspects of these algorithms have been evaluated in detail (e.g., test length and different kinds of techniques aimed at improving performance, like seeding), the influence of the specific algorithms has to date seen less attention in the literature. As it is theoretically impossible to design an algorithm that is best on all possible problems, a common approach in software engineering problems is to first try a Genetic Algorithm, and only afterwards try to refine it or compare it with other algorithms to see if any of them is more suited for the addressed problem. This is particularly important in test generation, since recent work suggests that random search may in practice be equally effective, whereas the reformulation as a many-objective problem seems to be more effective. To shed light on the influence of the search algorithms, we empirically evaluate six different algorithms on a selection of non-trivial open source classes. Our study shows that the use of a test archive makes evolutionary algorithms clearly better than random testing, and it confirms that the many-objective search is the most effective.},
  address   = {Cham},
  comment   = {TODO},
  file      = {:papers/CR.pdf:PDF},
  year      = {2017}
}

@article{Tonella2004,
  author    = {Tonella, Paolo},
  title     = {Evolutionary Testing of Classes},
  number    = {4},
  pages     = {119–128},
  volume    = {29},
  address   = {New York, NY, USA},
  comment   = {TODO, Single Objectiva at a time approach.
               Objekt-orientierte Programmierung und Klassen werden bei der genetischen Suche berücksichtigt.},
  file      = {:papers/1013886.1007528.pdf:PDF},
  journal   = {SIGSOFT Softw. Eng. Notes},
  publisher = {Association for Computing Machinery},
  year      = {2004}
}

@inproceedings{Harman2010,
  author    = {Harman, Mark and Kim, Sung Gon and Lakhotia, Kiran and McMinn, Phil and Yoo, Shin},
  booktitle = {2010 Third International Conference on Software Testing, Verification, and Validation Workshops},
  title     = {Optimizing for the Number of Tests Generated in Search Based Test Data Generation with an Application to the Oracle Cost Problem},
  pages     = {182-191},
  comment   = {TODO number of tests},
  file      = {:papers/Optimizing_for_the_Number_of_Tests_Generated_in_Search_Based_Test_Data_Generation_with_an_Application_to_the_Oracle_Cost_Problem.pdf:PDF},
  year      = {2010},
  publisher = {IEEE Computer Society}
}

@article{Korel1990,
  author  = {Korel, B.},
  title   = {Automated software test data generation},
  number  = {8},
  pages   = {870-879},
  volume  = {16},
  comment = {TODO Original Paper über Branch Distance.},
  file    = {:papers/Automated_software_test_data_generation.pdf:PDF},
  journal = {IEEE Transactions on Software Engineering},
  year    = {1990}
}

@article{Wegener2001,
  author  = {Joachim Wegener and Andre Baresel and Harmen Sthamer},
  title   = {Evolutionary test environment for automatic structural testing},
  number  = {14},
  pages   = {841-854},
  volume  = {43},
  comment = {TODO Originales paper über Approach Level und Branch Distance},
  file    = {:papers/evolutionarytest-structural-testing-2.pdf:PDF},
  journal = {Information and Software Technology},
  year    = {2001}
}

@article{Harman2010a,
  author  = {Harman, Mark and McMinn, Phil},
  title   = {A Theoretical and Empirical Study of Search-Based Testing: Local, Global, and Hybrid Search},
  number  = {2},
  pages   = {226-247},
  volume  = {36},
  comment = {TODO},
  file    = {:papers/A_Theoretical_and_Empirical_Study_of_Search-Based_Testing_Local_Global_and_Hybrid_Search.pdf:PDF},
  journal = {IEEE Transactions on Software Engineering},
  year    = {2010}
}

@book{Sampson_1976,
  title     = {Adaptation in natural and artificial systems: an introductory analysis with applications to biology, control, and artificial intelligence},
  author    = {Holland, John H},
  year      = {1992},
  publisher = {MIT press}
}

@book{whitley1989genitor,
  author    = {Whitley, L. Darrell},
  title     = {The GENITOR algorithm and selection pressure: why rank-based allocation of reproductive trials is best.},
  publisher = {Citeseer},
  comment   = {TODO Erklärt den linearen Selektionsalgorithmus.
               Lineare Selektion},
  file      = {:papers/10.1.1.18.8195.pdf:PDF},
  year      = {1989}
}

@book{Davis1991,
  author    = {Davis, L.},
  date      = {1991},
  title     = {Handbook of genetic algorithms},
  publisher = {Van Nostrand Reinhold, New York}
}

@article{Ramamoorthy1976,
  author  = {Ramamoorthy, C. V. and Ho, S.-B. F. and Chen, W. T.},
  title   = {On the Automated Generation of Program Test Data},
  number  = {4},
  pages   = {293-300},
  volume  = {SE-2},
  file    = {:papers/On_the_Automated_Generation_of_Program_Test_Data.pdf:PDF},
  journal = {IEEE Transactions on Software Engineering},
  year    = {1976}
}

@article{Lewis1983,
  author    = {Lewis, Harry R.},
  title     = {Michael R. Garey and David S. Johnson. Computers and intractability. A guide to the theory of NP-completeness. W. H. Freeman and Company, San Francisco1979, x 338 pp.},
  number    = {2},
  pages     = {498–500},
  volume    = {48},
  journal   = {Journal of Symbolic Logic},
  publisher = {Cambridge University Press},
  year      = {1983}
}


@inbook{Tracey2002,
  author    = {Tracey, Nigel and Clark, John and McDermid, John and Mander, Keith},
  booktitle = {Systems Engineering for Business Process Change: New Directions: Collected Papers from the EPSRC Research Programme},
  title     = {A Search-Based Automated Test-Data Generation Framework for Safety-Critical Systems},
  pages     = {174-213},
  publisher = {Springer London},
  address   = {London},
  comment   = {TODO Branch Distance auch für UNDs und ODERs},
  year      = {2002}
}

@inproceedings{Shamshiri2015a,
  author    = {Shamshiri, Sina and Rojas, Jos\'{e} Miguel and Fraser, Gordon and McMinn, Phil},
  booktitle = {Proceedings of the 2015 Annual Conference on Genetic and Evolutionary Computation},
  title     = {Random or Genetic Algorithm Search for Object-Oriented Test Suite Generation?},
  pages     = {1367–1374},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  comment   = {TODO Random Search kann manchmal sogar effektiver sein, als genetische Algorithmen. Objekt-orientiert
               Object-oriented},
  file      = {:papers/2739480.2754696.pdf:PDF},
  year      = {2015}
}

@inproceedings{Rojas2015,
  author    = {Rojas, Jos{\'e} Miguel and Campos, Jos{\'e} and Vivanti, Mattia and Fraser, Gordon and Arcuri, Andrea},
  booktitle = {Search-Based Software Engineering},
  title     = {Combining Multiple Coverage Criteria in Search-Based Unit Test Generation},
  pages     = {93-108},
  publisher = {Springer International Publishing},
  address   = {Cham},
  comment   = {TODO Mehrere Coverage Kriterien in einer linearen Kombination},
  file      = {:papers/ssbse15_multi.pdf:PDF},
  year      = {2015}
}

@article{Rojas2017,
  author    = {Rojas, Jos{\'e} Miguel and Vivanti, Mattia and Arcuri, Andrea and Fraser, Gordon},
  title     = {A detailed investigation of the effectiveness of whole test suite generation},
  number    = {2},
  pages     = {852--893},
  volume    = {22},
  comment   = {TODO Whole test suite generation mit MOSA},
  file      = {:papers/Rojas2017_Article_ADetailedInvestigationOfTheEff.pdf:PDF},
  journal   = {Empirical Software Engineering},
  publisher = {Springer},
  year      = {2017}
}

@article{Panichella2018,
  author  = {Panichella, Annibale and Kifetew, Fitsum Meshesha and Tonella, Paolo},
  title   = {Automated Test Case Generation as a Many-Objective Optimisation Problem with Dynamic Selection of the Targets},
  number  = {2},
  pages   = {122-158},
  volume  = {44},
  comment = {TODO DynaMOSA},
  file    = {:papers/Automated_Test_Case_Generation_as_a_Many-Objective_Optimisation_Problem_with_Dynamic_Selection_of_the_Targets.pdf:PDF},
  journal = {IEEE Transactions on Software Engineering},
  year    = {2018}
}

@article{Doerr2015,
  author  = {Benjamin Doerr and Carola Doerr and Franziska Ebel},
  title   = {From black-box complexity to designing new genetic algorithms},
  pages   = {87-104},
  volume  = {567},
  comment = {TODO  1 + (λ, λ) GA},
  file    = {:papers/From-black-box-complexity-to-designing-new-genet_2015_Theoretical-Computer-S.pdf:PDF},
  journal = {Theoretical Computer Science},
  year    = {2015}
}

@inproceedings{TerSarkisov2011,
  author  = {Ter-Sarkisov, Aram and Marsland, Stephen},
  title   = {Convergence Properties of ($\mu$ + $\lambda$) Evolutionary Algorithms},
  number  = {1},
  volume  = {25},
  comment = {TODO μ + λ Evolutionary Algorithm},
  file    = {:papers/8037-Article Text-11565-1-2-20201228.pdf:PDF},
  journal = {Proceedings of the AAAI Conference on Artificial Intelligence},
  year    = {2011}
}

@inbook{Deb2014,
  author    = {Deb, Kalyanmoy and Deb, Kalyanmoy},
  booktitle = {Search Methodologies: Introductory Tutorials in Optimization and Decision Support Techniques},
  title     = {Multi-objective Optimization},
  pages     = {403--449},
  publisher = {Springer US},
  address   = {Boston, MA},
  comment   = {TODO Whole Suite Optimisierung von Fraser verwendet die Ideen aus diesem Buch. Außerdem werden Nachteile und Schwächen von diesem Ansatz beschrieben},
  file      = {:papers/2014_Book_SearchMethodologies.pdf:PDF},
  year      = {2014}
}

@article{Fraser2014,
  author    = {Fraser, Gordon and Arcuri, Andrea},
  title     = {A Large-Scale Evaluation of Automated Unit Test Generation Using EvoSuite},
  number    = {2},
  volume    = {24},
  address   = {New York, NY, USA},
  comment   = {TODO Branch coverage},
  file      = {:papers/2685612.pdf:PDF},
  journal   = {ACM Trans. Softw. Eng. Methodol.},
  publisher = {Association for Computing Machinery},
  year      = {2014},
  address   = {New York, NY, USA}
}

@inproceedings{Pachauri2015,
  author    = {Pachauri, Ankur and Gursaran and Mishra, Gaurav},
  booktitle = {2015 International Conference on Futuristic Trends on Computational Analysis and Knowledge Management (ABLAZE)},
  title     = {A path and branch based approach to fitness computation for program test data generation using genetic algorithm},
  pages     = {49-55},
  comment   = {TODO},
  file      = {:papers/A_path_and_branch_based_approach_to_fitness_computation_for_program_test_data_generation_using_genetic_algorithm.pdf:PDF},
  year      = {2015}
}

@article{Fraser2012,
  author  = {Fraser, Gordon and Zeller, Andreas},
  title   = {Mutation-Driven Generation of Unit Tests and Oracles},
  number  = {2},
  pages   = {278-292},
  volume  = {38},
  comment = {EVOLVE},
  file    = {:papers/Mutation-Driven_Generation_of_Unit_Tests_and_Oracles.pdf:PDF},
  journal = {IEEE Transactions on Software Engineering},
  year    = {2012}
}

@inproceedings{Dharsana2007,
  author    = {Dharsana, C.S. Siva and Jennifer, D. Nithila and Askarunisha, A. and Ramaraj, N.},
  booktitle = {International Conference on Computational Intelligence and Multimedia Applications (ICCIMA 2007)},
  title     = {Java Based Test Case Generation and Optimization Using Evolutionary Testing},
  pages     = {44-49},
  volume    = {1},
  comment   = {EVOLVE},
  file      = {:papers/Java_Based_Test_Case_Generation_and_Optimization_Using_Evolutionary_Testing.pdf:PDF},
  year      = {2007}
}

@inproceedings{Baresi2010,
  author    = {Baresi, Luciano and Lanzi, Pier Luca and Miraz, Matteo},
  booktitle = {2010 Third International Conference on Software Testing, Verification and Validation},
  title     = {TestFul: An Evolutionary Test Approach for Java},
  pages     = {185-194},
  comment   = {EVOLVE},
  file      = {:papers/TestFul_An_Evolutionary_Test_Approach_for_Java.pdf:PDF},
  year      = {2010}
}

@inproceedings{Inkumsah2008,
  author    = {Inkumsah, Kobi and Xie, Tao},
  booktitle = {2008 23rd IEEE/ACM International Conference on Automated Software Engineering},
  title     = {Improving Structural Testing of Object-Oriented Programs via Integrating Evolutionary Testing and Symbolic Execution},
  pages     = {297-306},
  comment   = {EVOLVE},
  file      = {:papers/Improving_Structural_Testing_of_Object-Oriented_Programs_via_Integrating_Evolutionary_Testing_and_Symbolic_Execution.pdf:PDF},
  year      = {2008},
  publisher = {IEEE Computer Society}
}

@article{Arcuri2008,
  author  = {Andrea Arcuri and Xin Yao},
  title   = {Search based software testing of object-oriented containers},
  number  = {15},
  pages   = {3075-3095},
  volume  = {178},
  comment = {TODO Object-oriented testing},
  file    = {:papers/20140.pdf:PDF},
  journal = {Information Sciences},
  year    = {2008}
}

@book{Beizer2003,
  author    = {Beizer, Boris},
  title     = {Software testing techniques},
  publisher = {Dreamtech Press},
  year      = {2003}
}

@article{Clarke1976,
  author  = {Clarke, L.A.},
  title   = {A System to Generate Test Data and Symbolically Execute Programs},
  number  = {3},
  pages   = {215-222},
  volume  = {SE-2},
  file    = {:papers/A_System_to_Generate_Test_Data_and_Symbolically_Execute_Programs.pdf:PDF},
  journal = {IEEE Transactions on Software Engineering},
  year    = {1976}
}

@inproceedings{Murphy2007,
  author    = {Murphy, Christian and Kaiser, Gail and Arias, Marta},
  booktitle = {Proceedings of the 2nd International Workshop on Random Testing: Co-Located with the 22nd IEEE/ACM International Conference on Automated Software Engineering (ASE 2007)},
  title     = {Parameterizing Random Test Data According to Equivalence Classes},
  pages     = {38–41},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  comment   = {TODO viele nützliche Referenzen für das Testen},
  file      = {:papers/1292414.1292425.pdf:PDF},
  year      = {2007}
}

@article{Ball2015,
  author    = {Ball, Thomas and Jakub, Daniel},
  title     = {Deconstructing Dynamic Symbolic Execution},
  pages     = {26-41},
  volume    = {40},
  file      = {:papers/dse.pdf:PDF},
  journal   = {NATO Science for Peace and Security Series, D: Information and Communication Security},
  publisher = {IOS Press},
  year      = {2015}
}

@article{King1976,
  author    = {King, James C.},
  title     = {Symbolic Execution and Program Testing},
  number    = {7},
  pages     = {385–394},
  volume    = {19},
  address   = {New York, NY, USA},
  journal   = {Commun. ACM},
  publisher = {Association for Computing Machinery},
  year      = {1976}
}

@inproceedings{Cadar2005,
  author    = {Cadar, Cristian and Engler, Dawson},
  booktitle = {Model Checking Software},
  title     = {Execution Generated Test Cases: How to Make Systems Code Crash Itself},
  pages     = {2--23},
  publisher = {Springer Berlin Heidelberg},
  address   = {Berlin, Heidelberg},
  comment   = {Dynamic Symbolic Execution DSE},
  year      = {2005}
}

@inproceedings{Gupta2000,
  author    = {Gupta, N. and Mathur, A.P. and Soffa, M.L.},
  booktitle = {Proceedings ASE 2000. Fifteenth IEEE International Conference on Automated Software Engineering},
  title     = {Generating test data for branch coverage},
  pages     = {219-227},
  file      = {:papers/Generating_test_data_for_branch_coverage.pdf:PDF},
  year      = {2000},
  publisher = {IEEE Computer Society}
}

@article{Korel1992,
  author    = {Bogdan Korel},
  title     = {Dynamic method for software test data generation},
  number    = {4},
  pages     = {203-213},
  volume    = {2},
  journal   = {Software Testing, Verification and Reliability},
  publisher = {Wiley},
  year      = {1992}
}

@article{Cadar2008,
  author    = {Cadar, Cristian and Ganesh, Vijay and Pawlowski, Peter M. and Dill, David L. and Engler, Dawson R.},
  title     = {EXE: Automatically Generating Inputs of Death},
  number    = {2},
  volume    = {12},
  address   = {New York, NY, USA},
  journal   = {ACM Trans. Inf. Syst. Secur.},
  publisher = {Association for Computing Machinery},
  year      = {2008}
}

@inproceedings{Fraser2013a,
  author    = {Fraser, Gordon and Arcuri, Andrea},
  booktitle = {2013 IEEE Sixth International Conference on Software Testing, Verification and Validation},
  title     = {EvoSuite: On the Challenges of Test Case Generation in the Real World},
  pages     = {362-369},
  file      = {:papers/icst13_tool.pdf:PDF},
  year      = {2013},
  publisher = {IEEE Computer Society}
}

@inproceedings{Gough2005,
  author    = {Gough, J.},
  booktitle = {2005 Australian Software Engineering Conference},
  title     = {Virtual machines, managed code and component technology},
  pages     = {5-12},
  year      = {2005},
  publisher = {IEEE Computer Society}
}

@inproceedings{Lin2021,
  author    = {Lin, Yun and Ong, You Sheng and Sun, Jun and Fraser, Gordon and Dong, Jin Song},
  booktitle = {Proceedings of the 29th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering},
  title     = {Graph-Based Seed Object Synthesis for Search-Based Unit Testing},
  pages     = {1068–1080},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  file      = {:papers/fse21_objectseed.pdf:PDF},
  year      = {2021}
}

@inproceedings{Vogl2021,
  author    = {Vogl, Sebastian and Schweikl, Sebastian and Fraser, Gordon and Arcuri, Andrea and Campos, Jose and Panichella, Annibale},
  booktitle = {2021 IEEE/ACM 14th International Workshop on Search-Based Software Testing (SBST)},
  title     = {EVOSUITE at the SBST 2021 Tool Competition},
  publisher = {IEEE Computer Society},
  pages     = {28-29},
  year      = {2021}
}

@inproceedings{Panichella2020,
  author    = {Panichella, Annibale and Campos, Jos{\'e} and Fraser, Gordon},
  booktitle = {Proceedings of the IEEE/ACM 42nd International Conference on Software Engineering Workshops},
  title     = {EvoSuite at the SBST 2020 Tool Competition},
  pages     = {549-552},
  year      = {2020},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery}
}

@inproceedings{Campos2019,
  author    = {Campos, Jos{\'e} and Panichella, Annibale and Fraser, Gordon},
  booktitle = {2019 IEEE/ACM 12th International Workshop on Search-Based Software Testing (SBST)},
  title     = {EvoSuiTE at the SBST 2019 tool competition},
  publisher = {IEEE Computer Society},
  pages     = {29-32},
  year      = {2019}
}

@inproceedings{Fraser2018,
  author    = {Fraser, Gordon and Rojas, Jos\'{e} Miguel and Arcuri, Andrea},
  booktitle = {Proceedings of the 11th International Workshop on Search-Based Software Testing},
  title     = {EvoSuite at the SBST 2018 Tool Competition},
  pages     = {34–37},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  year      = {2018}
}

@inproceedings{Fraser2016,
  author    = {Gordon Fraser and Andrea Arcuri},
  booktitle = {Proceedings of the 9th International Workshop on Search-Based Software Testing},
  title     = {EvoSuite at the SBST 2016 Tool Competition},
  pages     = {33-36},
  year      = {2016},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA}
}

@inproceedings{Fraser2017,
  author    = {Gordon Fraser and Andrea Arcuri},
  booktitle = {10th International Workshop on Search-Based Software Testing (SBST'17) at ICSE'17},
  title     = {EvoSuite at the SBST 2017 Tool Competition},
  pages     = {39-42},
  year      = {2017}
}

@inproceedings{Braione2018,
  author    = {Braione, Pietro and Denaro, Giovanni and Mattavelli, Andrea and Pezzè, Mauro},
  booktitle = {2018 IEEE/ACM 40th International Conference on Software Engineering: Companion (ICSE-Companion)},
  title     = {SUSHI: A Test Generator for Programs with Complex Structured Inputs},
  pages     = {21-24},
  file      = {:papers/SUSHI_A_Test_Generator_for_Programs_with_Complex_Structured_Inputs.pdf:PDF},
  year      = {2018},
  publisher = {IEEE Computer Society}
}

@inproceedings{Campos2017a,
  author    = {Campos, Jos{\'e} and Ge, Yan and Fraser, Gordon and Eler, Marcelo and Arcuri, Andrea},
  booktitle = {Search Based Software Engineering},
  title     = {An Empirical Evaluation of Evolutionary Algorithms for Test Suite Generation},
  pages     = {33-48},
  publisher = {Springer International Publishing},
  address   = {Cham},
  file      = {:papers/2-Article Text-3-1-10-20210404.pdf:PDF},
  year      = {2017}
}

@article{Fraser2014a,
  author    = {Gordon Fraser and Andrea Arcuri},
  title     = {Achieving scalable mutation-based generation of whole test suites},
  number    = {3},
  pages     = {783-812},
  volume    = {20},
  comment   = {TODO},
  file      = {:papers/Fraser-Arcuri2015_Article_AchievingScalableMutation-base.pdf:PDF},
  journal   = {Empirical Software Engineering},
  publisher = {Springer Science and Business Media {LLC}},
  year      = {2014}
}

@inproceedings{Li2011,
  author    = {Li, Guodong and Ghosh, Indradeep and Rajan, Sreeranga P.},
  booktitle = {Computer Aided Verification},
  title     = {KLOVER: A Symbolic Execution and Automatic Test Generation Tool for C++ Programs},
  pages     = {609-615},
  publisher = {Springer Berlin Heidelberg},
  address   = {Berlin, Heidelberg},
  file      = {:papers/2011_Book_ComputerAidedVerification.pdf:PDF},
  year      = {2011}
}

@article{Harman2001,
  author  = {Mark Harman and Bryan F Jones},
  title   = {Search-based software engineering},
  number  = {14},
  pages   = {833-839},
  volume  = {43},
  journal = {Information and Software Technology},
  year    = {2001}
}

@inproceedings{Korel2005,
  author    = {Korel, B. and Harman, M. and Chung, S. and Apirukvorapinit, P. and Gupta, R. and Zhang, Q.},
  booktitle = {16th IEEE International Symposium on Software Reliability Engineering (ISSRE'05)},
  title     = {Data dependence based testability transformation in automated test generation},
  pages     = {10 pp.-254},
  comment   = {TODO},
  file      = {:papers/Data_dependence_based_testability_transformation_in_automated_test_generation.pdf:PDF},
  year      = {2005}
}

@inproceedings{DiFederico2018,
  author    = {Di Federico, Alessandro and Fezzardi, Pietro and Agosta, Giovanni},
  booktitle = {2018 International Carnahan Conference on Security Technology (ICCST)},
  title     = {rev.ng: A Multi-Architecture Framework for Reverse Engineering and Vulnerability Discovery},
  pages     = {1-5},
  file      = {:papers/iccst-18-paper.pdf:PDF},
  year      = {2018}
}

@misc{Tolnay_syn,
  author  = {Tolnay, David},
  title   = {Parser for Rust source code},
  url     = {https://github.com/dtolnay/syn},
  urldate = {2021-12-23}
}

@misc{Zalewski2014,
  author = {Zalewski, Michal},
  title  = {American fuzzy lop},
  year   = {2014}
}

@inproceedings{Fioraldi2020,
  author    = {Andrea Fioraldi and Dominik Maier and Heiko Ei{\ss}feldt and Marc Heuse},
  booktitle = {14th {USENIX} Workshop on Offensive Technologies ({WOOT} 20)},
  title     = {AFL++ : Combining Incremental Steps of Fuzzing Research},
  publisher = {{USENIX} Association},
  file      = {:papers/aflpp-woot2020.pdf:PDF},
  year      = {2020}
}

@misc{LLVMProject2017,
  author  = {{LLVM Project}},
  title   = {libFuzzer – a library for coverage-guided fuzz testing},
  url     = {https://llvm.org/docs/LibFuzzer.html},
  urldate = {2021-12-20}
}

@inproceedings{Rocha2020,
  author    = {Rocha, Herbert and Menezes, Rafael and Cordeiro, Lucas C. and Barreto, Raimundo},
  booktitle = {Tools and Algorithms for the Construction and Analysis of Systems},
  title     = {Map2Check: Using Symbolic Execution and Fuzzing},
  pages     = {403-407},
  publisher = {Springer International Publishing},
  address   = {Cham},
  file      = {:papers/2020_Book_ToolsAndAlgorithmsForTheConstr.pdf:PDF},
  year      = {2020}
}

@inproceedings{Le2019,
  author    = {Le, Hoang M.},
  booktitle = {Automated Technology for Verification and Analysis},
  title     = {KLUZZER: Whitebox Fuzzing on Top of LLVM},
  pages     = {246-252},
  publisher = {Springer International Publishing},
  address   = {Cham},
  file      = {:papers/10.1007_978-3-030-31784-3_14-citation.bib:bib},
  year      = {2019}
}

@article{Cooper2001,
  author  = {Cooper, Keith D and Harvey, Timothy J and Kennedy, Ken},
  title   = {A simple, fast dominance algorithm},
  number  = {1-10},
  pages   = {1-8},
  volume  = {4},
  comment = {Dominance algorithm},
  journal = {Software Practice \& Experience},
  year    = {2001}
}

@article{Ferrante1987,
  author    = {Ferrante, Jeanne and Ottenstein, Karl J. and Warren, Joe D.},
  title     = {The Program Dependence Graph and Its Use in Optimization},
  number    = {3},
  pages     = {319–349},
  volume    = {9},
  address   = {New York, NY, USA},
  comment   = {Control dependence graph},
  journal   = {ACM Trans. Program. Lang. Syst.},
  publisher = {Association for Computing Machinery},
  year      = {1987}
}

@inproceedings{Prosser1959,
  author    = {Prosser, Reese T},
  booktitle = {Papers presented at the December 1-3, 1959, eastern joint IRE-AIEE-ACM computer conference},
  title     = {Applications of boolean matrices to the analysis of flow diagrams},
  pages     = {133-138},
  year      = {1959}
}

@inproceedings{Romano2011,
  author    = {Romano, Daniele and Di Penta, Massimiliano and Antoniol, Giuliano},
  booktitle = {2011 Fourth IEEE International Conference on Software Testing, Verification and Validation},
  title     = {An Approach for Search Based Testing of Null Pointer Exceptions},
  pages     = {160-169},
  year      = {2011}
}

@inproceedings{Bhattacharya2011,
  author    = {Bhattacharya, Neelesh and Sakti, Abdelilah and Antoniol, Giuliano and Gu{\'e}h{\'e}neuc, Yann-Ga{\"e}l and Pesant, Gilles},
  booktitle = {Search Based Software Engineering},
  title     = {Divide-by-Zero Exception Raising via Branch Coverage},
  editor    = {Cohen, Myra B. and {\'O} Cinn{\'e}ide, Mel},
  isbn      = {978-3-642-23716-4},
  pages     = {204--218},
  publisher = {Springer Berlin Heidelberg},
  abstract  = {In this paper, we discuss how a search-based branch coverage approach can be used to design an effective test data generation approach, specifically targeting divide-by-zero exceptions. We first propose a novel testability transformation combining approach level and branch distance. We then use different search strategies, i.e. hill climbing, simulated annealing, and genetic algorithm, to evaluate the performance of the novel testability transformation on a small synthetic example as well as on methods known to throw divide-by-zero exceptions, extracted from real world systems, namely Eclipse and Android. Finally, we also describe how the test data generation for divide-by-zero exceptions can be formulated as a constraint programming problem and compare the resolution of this problem with a genetic algorithm in terms of execution time. We thus report evidence that genetic algorithm using our novel testability transformation out-performs hill climbing and simulated annealing and a previous approach (in terms of numbers of fitness evaluation) but is out-performed by constraint programming (in terms of execution time).},
  address   = {Berlin, Heidelberg},
  year      = {2011}
}

@inproceedings{Korel1996,
  author    = {Korel, B. and Al-Yami, A.M.},
  booktitle = {Proceedings of IEEE 18th International Conference on Software Engineering},
  title     = {Assertion-oriented automated test data generation},
  publisher = {IEEE Computer Society},
  pages     = {71-80},
  year      = {1996}
}

@inproceedings{Tillmann2008,
  author    = {Tillmann, Nikolai and de Halleux, Jonathan},
  booktitle = {Tests and Proofs},
  title     = {Pex--White Box Test Generation for .NET},
  pages     = {134-153},
  publisher = {Springer Berlin Heidelberg},
  address   = {Berlin, Heidelberg},
  year      = {2008}
}

@article{Barr2013,
  author    = {Barr, Earl T. and Vo, Thanh and Le, Vu and Su, Zhendong},
  title     = {Automatic Detection of Floating-Point Exceptions},
  number    = {1},
  pages     = {549–560},
  volume    = {48},
  address   = {New York, NY, USA},
  journal   = {SIGPLAN Not.},
  publisher = {Association for Computing Machinery},
  year      = {2013}
}

@inproceedings{Fraser2014b,
  author    = {Fraser, Gordon and Arcuri, Andrea},
  booktitle = {Software Quality. Model-Based Approaches for Advanced Software and Systems Engineering},
  title     = {Automated Test Generation for Java Generics},
  pages     = {185-198},
  publisher = {Springer International Publishing},
  address   = {Cham},
  year      = {2014}
}

@article{Ardito2020,
  author   = {Luca Ardito and Luca Barbato and Marco Castelluccio and Riccardo Coppola and Calixte Denizet and Sylvestre Ledru and Michele Valsesia},
  title    = {rust-code-analysis: A Rust library to analyze and extract maintainability information from source codes},
  pages    = {100635},
  volume   = {12},
  journal  = {SoftwareX},
  keywords = {Algorithm, Software metrics, Software maintainability, Software quality},
  year     = {2020}
}

@inproceedings{Lukasczyk2020,
  author    = {Lukasczyk, Stephan and Kroi{\ss}, Florian and Fraser, Gordon},
  booktitle = {Search-Based Software Engineering},
  title     = {Automated Unit Test Generation for Python},
  pages     = {9-24},
  publisher = {Springer International Publishing},
  address   = {Cham},
  year      = {2020}
}

@inproceedings{Arcuri2011,
  author    = {Arcuri, Andrea and Briand, Lionel},
  booktitle = {2011 33rd International Conference on Software Engineering (ICSE)},
  title     = {A practical guide for using statistical tests to assess randomized algorithms in software engineering},
  pages     = {1-10},
  publisher = {IEEE Computer Society},
  year      = {2011}
}


@article{Ali2010,
  author  = {Ali, Shaukat and Briand, Lionel C. and Hemmati, Hadi and Panesar-Walawege, Rajwinder Kaur},
  title   = {A Systematic Review of the Application and Empirical Investigation of Search-Based Test Case Generation},
  number  = {6},
  pages   = {742-762},
  volume  = {36},
  journal = {IEEE Transactions on Software Engineering},
  year    = {2010}
}

@article{Leech2002,
  author    = {Leech, Nancy L and Onwuegbuzie, Anthony J},
  title     = {A Call for Greater Use of Nonparametric Statistics.},
  publisher = {ERIC},
  year      = {2002}
}

@article{Poulding2010,
  author  = {Poulding, Simon and Clark, John A.},
  title   = {Efficient Software Verification: Statistical Testing Using Automated Search},
  number  = {6},
  pages   = {763-777},
  volume  = {36},
  journal = {IEEE Transactions on Software Engineering},
  year    = {2010}
}

@inproceedings{Arcuri2017,
  author    = {A. Arcuri and G. Fraser and R. Just},
  booktitle = {2017 IEEE International Conference on Software Testing, Verification and Validation (ICST)},
  title     = {Private API Access and Functional Mocking in Automated Unit Test Generation},
  year      = {2017}
}

@inproceedings{7927969,
  author    = {Arcuri, Andrea and Fraser, Gordon and Just, René},
  title     = {Private API Access and Functional Mocking in Automated Unit Test Generation},
  year      = {2017},
  pages     = {126-137},
  publisher = {IEEE Computer Society}
}

@article{Li2015,
  author     = {Li, Bingdong and Li, Jinlong and Tang, Ke and Yao, Xin},
  title      = {Many-Objective Evolutionary Algorithms: A Survey},
  number     = {1},
  volume     = {48},
  address    = {New York, NY, USA},
  issue_date = {September 2015},
  journal    = {ACM Comput. Surv.},
  publisher  = {Association for Computing Machinery},
  year       = {2015}
}

@article{Luecken2014,
  author    = {Christian von Lücken and Benjam{\'{\i}}n Bar{\'{a}}n and Carlos Brizuela},
  year      = {2014},
  journal   = {Computational Optimization and Applications},
  title     = {A survey on multi-objective evolutionary algorithms for many-objective problems},
  publisher = {Springer Science and Business Media {LLC}},
  pages     = {707-756},
  volume    = {58},
  number    = {3}
}